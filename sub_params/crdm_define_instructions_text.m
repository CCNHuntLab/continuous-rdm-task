function instruct = crdm_define_instructions_text( options )
%CRDM_DEFINE_INSTRUCTIONS_TEXT Defines the text blobs that are shown to
%participants at the start of every session of the continuous random dot
%motion (crdm) task. Highly dependent on task version - and on the
%experimental design (conditions) used.
%   Note that any block-specific instructions (that vary with condition)
%   are defined in crdm_define_conditions.m and saved in the blocks struct.

switch options.design.designLabel
    case 'coherence variance'
        instruct.blockInfo = [...
    'You will do ' num2str(numel(options.design.blocks.nPerSession)), ...
    ' blocks of ' num2str(options.design.blocks.duration) ' minutes each.\n\n' ...
    ' At the beginning of each block, you will be told whether motion', ...
    ' coherence variance will be high or low.'];

    case 'trial frequency'
        instruct.blockInfo = [...
    'You will do ' num2str(numel(options.design.blocks.nPerSession)), ...
    ' blocks of ' num2str(options.design.blocks.duration) ' minutes each.\n\n' ...
    ' At the beginning of each block, you will be told how frequent', ...
    ' response periods will be.'];
end

instruct.taskDescription = ['In this task you will see a continuous stream ' ...
    'of randomly moving dots (one stream per block).\n\n ' ... 
    'You will have to respond every time you think that the dots are going ' ...
    'mostly to the left or the right (''response periods''). \n\n ' ...
    'Use the A key if dots move to the left, ' ...
    'and the L key if dots move to the right.'];

instruct.pleaseFixate = 'Please try to fixate on the fixation dot at all times!';

instruct.feedbackInfo = ['After every button press you will be given', ...
    ' feedback.\n\n The fixation dot in the centre of the moving dots', ...
    ' will change its colour. \n\n You can win points for correct', ...
    ' button presses and lose points for incorrect or missed button', ...
    ' presses. \n\n Green: correct response during response period', ...
    ' \n\n Red: incorrect response during response period', ...
    ' \n\n Yellow: Response during random motion (too early)', ...
    ' \n\n Blue: Missed trial period (too late)'];

instruct.trainingInfo = 'The fix dot will change to white during trials.';

instruct.afterBlockInfo = ['Well done! \n \n Please take a break. \n You can ' ...
        'look away from the screen.'];
    
instruct.afterBlockFeedbackInfo = ['Well done! \n \n Please take a break. \n You can ' ...
        'look away from the screen.\n \nPress any key to see feedback.'];

end